# This workflow is the main workflow for regenerating the benchmarks data needed for Bowtie's UI.
# It runs all benchmarks over Bowtie's supported implementations, publishing the benchmark reports (and other auxiliary metadata) for use in the frontend.
name: Collect New Benchmark Results

on:
  workflow_call:
    inputs:
      bowtie-version:
        type: string
        required: false
        default: ""
  workflow_dispatch:
  schedule:
    # Every Monday at 00:15 UTC
    - cron: "15 0 * * 1"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Bowtie
        uses: ./
        with:
          version: ${{ inputs.bowtie-version }}

      - name: Generate Benchmark Report
        run: |
          bowtie perf $(bowtie filter-implementations | sed 's/^/-i /') >> $GITHUB_STEP_SUMMARY

#      # This is useful to debug whether Bowtie accidentally fetched some huge
#      # number of container images.
#      - name: Show what images we fetched
#        run: docker images
#        if: always()
#
#      # This unfortunately can go wrong if e.g. we ever run out of memory above.
#      # Probably we should also atomically move files into place.
#      - name: Check Report is Valid
#        run: |
#          bowtie summary --show failures ${{ matrix.version }}.json --format markdown >> $GITHUB_STEP_SUMMARY
#
#      - uses: actions/upload-artifact@v4
#        with:
#          name: report-${{ matrix.version }}
#          path: ${{ matrix.version }}.json

#  generate-implementation-metadata:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Install Bowtie
#        uses: ./
#        with:
#          version: ${{ inputs.bowtie-version }}
#
#      - name: Generate implementations.json file
#        run: |
#          bowtie info $(bowtie filter-implementations | sed 's/^/-i /') --format json > implementations.json
#
#      - uses: actions/upload-artifact@v4
#        with:
#          name: implementations
#          path: implementations.json
#
#  site:
#    needs:
#      - regenerate-reports
#      - generate-implementation-metadata
#
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Install Bowtie
#        uses: ./
#        with:
#          version: ${{ inputs.bowtie-version }}
#
#      - name: Create our Site Structure
#        run: mkdir site
#
#      - name: Include New Reports
#        uses: actions/download-artifact@v4
#        with:
#          pattern: report-*
#          path: site/
#          merge-multiple: true
#
#      - name: Include Implementation Metadata
#        uses: actions/download-artifact@v4
#        with:
#          name: implementations
#          path: site/
#
#      - name: Generate Badges
#        run: bowtie badges
#
#      - uses: actions/upload-artifact@v4
#        with:
#          name: site
#          path: site
#
#  redeploy-frontend:
#    needs: site
#    uses: ./.github/workflows/ui.yml
#    with:
#      report_artifact_in_scope: true
