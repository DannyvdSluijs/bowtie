name: Rebuild Bowtie Images

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "implementations/**"
      - ".github/workflows/images.yml"
  push:
    branches-ignore:
      - "wip*"
    paths:
      - "implementations/**"
      - ".github/workflows/images.yml"
    tags:
      - "v*"

concurrency:
  group: images-${{ github.ref }}
  cancel-in-progress: true

jobs:
  list:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.images-matrix.outputs.images }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Bowtie
        uses: ./
        with:
          installation-attempts: "5"
          installation-wait-seconds: "10"

      - id: images-matrix
        run: |
          echo "images=$(bowtie filter-implementations | sed -e 's/^/"/; s/$/"/; $!s/$/,/' | sed -e '1i[' -e '$a]')" >> $GITHUB_OUTPUT

  build:
    needs: list

    # Particularly for .NET (which we special case below),
    # we need a newer buildah than what's in 22.04 (which is buildah 1.23.1)
    # so that it properly sets TARGETARCH and therefore multi-architecture
    # container image builds know which architecture we're building for.
    # See https://github.com/containers/buildah/pull/4295.
    runs-on: ubuntu-24.04

    permissions:
      packages: write

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.list.outputs.images) }}

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            impl:
              - 'implementations/${{ matrix.image }}/**'

      - name: Install qemu
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
        if: |
          (
            steps.changes.outputs.impl == 'true'
            || (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags'))
          )
          && !startsWith(matrix.image, 'dotnet-')
        # See https://devblogs.microsoft.com/dotnet/improving-multiplatform-container-support/ for why not .NET

      - name: Build
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          context: implementations/${{ matrix.image }}
          containerfiles: |
            implementations/${{ matrix.image }}/Dockerfile
          image: ${{ matrix.image }}
          tags: latest ${{ github.sha }}
          archs: amd64, arm64
        if: steps.changes.outputs.impl == 'true' || (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags'))

      - name: Set DOCKER_HOST so podman-built images are findable
        run: |
          systemctl --user enable --now podman.socket
          sudo loginctl enable-linger $USER
          podman --remote info
          echo "DOCKER_HOST=unix://$(podman info --format '{{.Host.RemoteSocket.Path}}')" >> $GITHUB_ENV

      - name: Install Bowtie
        uses: ./
        if: steps.changes.outputs.impl == 'true' || (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags'))

      - name: Smoke Test
        run: |
          bowtie smoke -i "localhost/${{ steps.build_image.outputs.image-with-tag }}" --format json
          bowtie smoke -i "localhost/${{ steps.build_image.outputs.image-with-tag }}" --format markdown >> $GITHUB_STEP_SUMMARY
        if: steps.changes.outputs.impl == 'true' || (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags'))

      - name: Publish
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
